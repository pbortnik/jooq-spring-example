/*
 * This file is generated by jOOQ.
*/
package com.example.jooq.db.tables.pojos;


import com.example.jooq.db.enums.TestItemTypeEnum;

import java.io.Serializable;
import java.sql.Timestamp;
import java.util.Arrays;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "test_item", schema = "public", indexes = {
    @Index(name = "test_item_pk", unique = true, columnList = "id ASC")
})
public class TestItem implements Serializable {

    private static final long serialVersionUID = 102101277;

    private Long             id;
    private String           name;
    private TestItemTypeEnum type;
    private Timestamp        startTime;
    private String           description;
    private Timestamp        lastModified;
    private Parameter[]      parameters;
    private String           uniqueId;

    public TestItem() {}

    public TestItem(TestItem value) {
        this.id = value.id;
        this.name = value.name;
        this.type = value.type;
        this.startTime = value.startTime;
        this.description = value.description;
        this.lastModified = value.lastModified;
        this.parameters = value.parameters;
        this.uniqueId = value.uniqueId;
    }

    public TestItem(
        Long             id,
        String           name,
        TestItemTypeEnum type,
        Timestamp        startTime,
        String           description,
        Timestamp        lastModified,
        Parameter[]      parameters,
        String           uniqueId
    ) {
        this.id = id;
        this.name = name;
        this.type = type;
        this.startTime = startTime;
        this.description = description;
        this.lastModified = lastModified;
        this.parameters = parameters;
        this.uniqueId = uniqueId;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 64)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Column(name = "name", length = 256)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "type", nullable = false)
    public TestItemTypeEnum getType() {
        return this.type;
    }

    public void setType(TestItemTypeEnum type) {
        this.type = type;
    }

    @Column(name = "start_time", nullable = false)
    public Timestamp getStartTime() {
        return this.startTime;
    }

    public void setStartTime(Timestamp startTime) {
        this.startTime = startTime;
    }

    @Column(name = "description")
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Column(name = "last_modified", nullable = false)
    public Timestamp getLastModified() {
        return this.lastModified;
    }

    public void setLastModified(Timestamp lastModified) {
        this.lastModified = lastModified;
    }

    @Column(name = "parameters")
    public Parameter[] getParameters() {
        return this.parameters;
    }

    public void setParameters(Parameter... parameters) {
        this.parameters = parameters;
    }

    @Column(name = "unique_id", nullable = false, length = 256)
    public String getUniqueId() {
        return this.uniqueId;
    }

    public void setUniqueId(String uniqueId) {
        this.uniqueId = uniqueId;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TestItem (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(type);
        sb.append(", ").append(startTime);
        sb.append(", ").append(description);
        sb.append(", ").append(lastModified);
        sb.append(", ").append(Arrays.toString(parameters));
        sb.append(", ").append(uniqueId);

        sb.append(")");
        return sb.toString();
    }
}
