/*
 * This file is generated by jOOQ.
*/
package com.example.jooq.db.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "issue", schema = "public", indexes = {
    @Index(name = "issue_pk", unique = true, columnList = "id ASC"),
    @Index(name = "issue_test_item_results_id_key", unique = true, columnList = "test_item_results_id ASC")
})
public class Issue implements Serializable {

    private static final long serialVersionUID = -1431412995;

    private Long    id;
    private Integer issueType;
    private String  issueDescription;
    private Boolean autoAnalyzed;
    private Boolean ignoreAnalyzer;
    private Long    testItemResultsId;

    public Issue() {}

    public Issue(Issue value) {
        this.id = value.id;
        this.issueType = value.issueType;
        this.issueDescription = value.issueDescription;
        this.autoAnalyzed = value.autoAnalyzed;
        this.ignoreAnalyzer = value.ignoreAnalyzer;
        this.testItemResultsId = value.testItemResultsId;
    }

    public Issue(
        Long    id,
        Integer issueType,
        String  issueDescription,
        Boolean autoAnalyzed,
        Boolean ignoreAnalyzer,
        Long    testItemResultsId
    ) {
        this.id = id;
        this.issueType = issueType;
        this.issueDescription = issueDescription;
        this.autoAnalyzed = autoAnalyzed;
        this.ignoreAnalyzer = ignoreAnalyzer;
        this.testItemResultsId = testItemResultsId;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 64)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Column(name = "issue_type", precision = 32)
    public Integer getIssueType() {
        return this.issueType;
    }

    public void setIssueType(Integer issueType) {
        this.issueType = issueType;
    }

    @Column(name = "issue_description")
    public String getIssueDescription() {
        return this.issueDescription;
    }

    public void setIssueDescription(String issueDescription) {
        this.issueDescription = issueDescription;
    }

    @Column(name = "auto_analyzed")
    public Boolean getAutoAnalyzed() {
        return this.autoAnalyzed;
    }

    public void setAutoAnalyzed(Boolean autoAnalyzed) {
        this.autoAnalyzed = autoAnalyzed;
    }

    @Column(name = "ignore_analyzer")
    public Boolean getIgnoreAnalyzer() {
        return this.ignoreAnalyzer;
    }

    public void setIgnoreAnalyzer(Boolean ignoreAnalyzer) {
        this.ignoreAnalyzer = ignoreAnalyzer;
    }

    @Column(name = "test_item_results_id", unique = true, precision = 64)
    public Long getTestItemResultsId() {
        return this.testItemResultsId;
    }

    public void setTestItemResultsId(Long testItemResultsId) {
        this.testItemResultsId = testItemResultsId;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Issue (");

        sb.append(id);
        sb.append(", ").append(issueType);
        sb.append(", ").append(issueDescription);
        sb.append(", ").append(autoAnalyzed);
        sb.append(", ").append(ignoreAnalyzer);
        sb.append(", ").append(testItemResultsId);

        sb.append(")");
        return sb.toString();
    }
}
