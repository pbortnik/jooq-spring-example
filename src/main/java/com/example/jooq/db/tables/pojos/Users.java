/*
 * This file is generated by jOOQ.
*/
package com.example.jooq.db.tables.pojos;


import com.example.jooq.db.enums.UserRoleEnum;
import com.example.jooq.db.enums.UserTypeEnum;

import java.io.Serializable;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "users", schema = "public", indexes = {
    @Index(name = "users_login_key", unique = true, columnList = "login ASC"),
    @Index(name = "users_pk", unique = true, columnList = "id ASC")
})
public class Users implements Serializable {

    private static final long serialVersionUID = -157232577;

    private Integer      id;
    private String       login;
    private String       password;
    private String       email;
    private UserRoleEnum role;
    private UserTypeEnum type;
    private Integer      defaultProjectId;
    private String       fullName;
    private Object       metadata;

    public Users() {}

    public Users(Users value) {
        this.id = value.id;
        this.login = value.login;
        this.password = value.password;
        this.email = value.email;
        this.role = value.role;
        this.type = value.type;
        this.defaultProjectId = value.defaultProjectId;
        this.fullName = value.fullName;
        this.metadata = value.metadata;
    }

    public Users(
        Integer      id,
        String       login,
        String       password,
        String       email,
        UserRoleEnum role,
        UserTypeEnum type,
        Integer      defaultProjectId,
        String       fullName,
        Object       metadata
    ) {
        this.id = id;
        this.login = login;
        this.password = password;
        this.email = email;
        this.role = role;
        this.type = type;
        this.defaultProjectId = defaultProjectId;
        this.fullName = fullName;
        this.metadata = metadata;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 32)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "login", unique = true, nullable = false)
    public String getLogin() {
        return this.login;
    }

    public void setLogin(String login) {
        this.login = login;
    }

    @Column(name = "password", nullable = false)
    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    @Column(name = "email", nullable = false)
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Column(name = "role", nullable = false)
    public UserRoleEnum getRole() {
        return this.role;
    }

    public void setRole(UserRoleEnum role) {
        this.role = role;
    }

    @Column(name = "type", nullable = false)
    public UserTypeEnum getType() {
        return this.type;
    }

    public void setType(UserTypeEnum type) {
        this.type = type;
    }

    @Column(name = "default_project_id", precision = 32)
    public Integer getDefaultProjectId() {
        return this.defaultProjectId;
    }

    public void setDefaultProjectId(Integer defaultProjectId) {
        this.defaultProjectId = defaultProjectId;
    }

    @Column(name = "full_name", nullable = false)
    public String getFullName() {
        return this.fullName;
    }

    public void setFullName(String fullName) {
        this.fullName = fullName;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Column(name = "metadata")
    public Object getMetadata() {
        return this.metadata;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setMetadata(Object metadata) {
        this.metadata = metadata;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Users (");

        sb.append(id);
        sb.append(", ").append(login);
        sb.append(", ").append(password);
        sb.append(", ").append(email);
        sb.append(", ").append(role);
        sb.append(", ").append(type);
        sb.append(", ").append(defaultProjectId);
        sb.append(", ").append(fullName);
        sb.append(", ").append(metadata);

        sb.append(")");
        return sb.toString();
    }
}
