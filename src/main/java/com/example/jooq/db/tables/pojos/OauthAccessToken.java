/*
 * This file is generated by jOOQ.
*/
package com.example.jooq.db.tables.pojos;


import com.example.jooq.db.enums.AccessTokenTypeEnum;

import java.io.Serializable;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "oauth_access_token", schema = "public", uniqueConstraints = {
    @UniqueConstraint(columnNames = {"user_id", "token_type"})
}, indexes = {
    @Index(name = "access_tokens_pk", unique = true, columnList = "user_id ASC, token_type ASC")
})
public class OauthAccessToken implements Serializable {

    private static final long serialVersionUID = 1430474953;

    private Long                userId;
    private String              token;
    private AccessTokenTypeEnum tokenType;

    public OauthAccessToken() {}

    public OauthAccessToken(OauthAccessToken value) {
        this.userId = value.userId;
        this.token = value.token;
        this.tokenType = value.tokenType;
    }

    public OauthAccessToken(
        Long                userId,
        String              token,
        AccessTokenTypeEnum tokenType
    ) {
        this.userId = userId;
        this.token = token;
        this.tokenType = tokenType;
    }

    @Column(name = "user_id", nullable = false, precision = 64)
    public Long getUserId() {
        return this.userId;
    }

    public void setUserId(Long userId) {
        this.userId = userId;
    }

    @Column(name = "token", nullable = false)
    public String getToken() {
        return this.token;
    }

    public void setToken(String token) {
        this.token = token;
    }

    @Column(name = "token_type", nullable = false)
    public AccessTokenTypeEnum getTokenType() {
        return this.tokenType;
    }

    public void setTokenType(AccessTokenTypeEnum tokenType) {
        this.tokenType = tokenType;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("OauthAccessToken (");

        sb.append(userId);
        sb.append(", ").append(token);
        sb.append(", ").append(tokenType);

        sb.append(")");
        return sb.toString();
    }
}
