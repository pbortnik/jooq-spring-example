/*
 * This file is generated by jOOQ.
*/
package com.example.jooq.db.tables.pojos;


import com.example.jooq.db.enums.ProjectTypeEnum;

import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "project_configuration", schema = "public", indexes = {
    @Index(name = "project_configuration_email_configuration_id_key", unique = true, columnList = "email_configuration_id ASC"),
    @Index(name = "project_configuration_pk", unique = true, columnList = "id ASC")
})
public class ProjectConfiguration implements Serializable {

    private static final long serialVersionUID = 2083501934;

    private Integer         id;
    private ProjectTypeEnum projectType;
    private Object          interruptTimeout;
    private Object          keepLogsInterval;
    private Object          keepScreenshotsInterval;
    private Boolean         aaEnabled;
    private Object          metadata;
    private Integer         emailConfigurationId;
    private Timestamp       createdOn;

    public ProjectConfiguration() {}

    public ProjectConfiguration(ProjectConfiguration value) {
        this.id = value.id;
        this.projectType = value.projectType;
        this.interruptTimeout = value.interruptTimeout;
        this.keepLogsInterval = value.keepLogsInterval;
        this.keepScreenshotsInterval = value.keepScreenshotsInterval;
        this.aaEnabled = value.aaEnabled;
        this.metadata = value.metadata;
        this.emailConfigurationId = value.emailConfigurationId;
        this.createdOn = value.createdOn;
    }

    public ProjectConfiguration(
        Integer         id,
        ProjectTypeEnum projectType,
        Object          interruptTimeout,
        Object          keepLogsInterval,
        Object          keepScreenshotsInterval,
        Boolean         aaEnabled,
        Object          metadata,
        Integer         emailConfigurationId,
        Timestamp       createdOn
    ) {
        this.id = id;
        this.projectType = projectType;
        this.interruptTimeout = interruptTimeout;
        this.keepLogsInterval = keepLogsInterval;
        this.keepScreenshotsInterval = keepScreenshotsInterval;
        this.aaEnabled = aaEnabled;
        this.metadata = metadata;
        this.emailConfigurationId = emailConfigurationId;
        this.createdOn = createdOn;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 32)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "project_type", nullable = false)
    public ProjectTypeEnum getProjectType() {
        return this.projectType;
    }

    public void setProjectType(ProjectTypeEnum projectType) {
        this.projectType = projectType;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Column(name = "interrupt_timeout", nullable = false)
    public Object getInterruptTimeout() {
        return this.interruptTimeout;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setInterruptTimeout(Object interruptTimeout) {
        this.interruptTimeout = interruptTimeout;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Column(name = "keep_logs_interval", nullable = false)
    public Object getKeepLogsInterval() {
        return this.keepLogsInterval;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setKeepLogsInterval(Object keepLogsInterval) {
        this.keepLogsInterval = keepLogsInterval;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Column(name = "keep_screenshots_interval", nullable = false)
    public Object getKeepScreenshotsInterval() {
        return this.keepScreenshotsInterval;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setKeepScreenshotsInterval(Object keepScreenshotsInterval) {
        this.keepScreenshotsInterval = keepScreenshotsInterval;
    }

    @Column(name = "aa_enabled", nullable = false)
    public Boolean getAaEnabled() {
        return this.aaEnabled;
    }

    public void setAaEnabled(Boolean aaEnabled) {
        this.aaEnabled = aaEnabled;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    @Column(name = "metadata")
    public Object getMetadata() {
        return this.metadata;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setMetadata(Object metadata) {
        this.metadata = metadata;
    }

    @Column(name = "email_configuration_id", unique = true, precision = 32)
    public Integer getEmailConfigurationId() {
        return this.emailConfigurationId;
    }

    public void setEmailConfigurationId(Integer emailConfigurationId) {
        this.emailConfigurationId = emailConfigurationId;
    }

    @Column(name = "created_on", nullable = false)
    public Timestamp getCreatedOn() {
        return this.createdOn;
    }

    public void setCreatedOn(Timestamp createdOn) {
        this.createdOn = createdOn;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ProjectConfiguration (");

        sb.append(id);
        sb.append(", ").append(projectType);
        sb.append(", ").append(interruptTimeout);
        sb.append(", ").append(keepLogsInterval);
        sb.append(", ").append(keepScreenshotsInterval);
        sb.append(", ").append(aaEnabled);
        sb.append(", ").append(metadata);
        sb.append(", ").append(emailConfigurationId);
        sb.append(", ").append(createdOn);

        sb.append(")");
        return sb.toString();
    }
}
