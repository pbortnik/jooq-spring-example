/*
 * This file is generated by jOOQ.
*/
package com.example.jooq.generated.tables.daos;

import com.example.jooq.generated.tables.UsersProject;
import com.example.jooq.generated.tables.records.UsersProjectRecord;
import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import javax.annotation.Generated;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class UsersProjectDao extends DAOImpl<UsersProjectRecord, com.example.jooq.generated.tables.pojos.UsersProject, Record2<Integer, Integer>> {

    /**
     * Create a new UsersProjectDao without any configuration
     */
    public UsersProjectDao() {
        super(UsersProject.USERS_PROJECT, com.example.jooq.generated.tables.pojos.UsersProject.class);
    }

    /**
     * Create a new UsersProjectDao with an attached configuration
     */
	@Autowired
    public UsersProjectDao(Configuration configuration) {
        super(UsersProject.USERS_PROJECT, com.example.jooq.generated.tables.pojos.UsersProject.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record2<Integer, Integer> getId(com.example.jooq.generated.tables.pojos.UsersProject object) {
        return compositeKeyRecord(object.getProjectId(), object.getUserId());
    }

    /**
     * Fetch records that have <code>project_id IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.UsersProject> fetchByProjectId(Integer... values) {
        return fetch(UsersProject.USERS_PROJECT.PROJECT_ID, values);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.example.jooq.generated.tables.pojos.UsersProject> fetchByUserId(Integer... values) {
        return fetch(UsersProject.USERS_PROJECT.USER_ID, values);
    }
}
