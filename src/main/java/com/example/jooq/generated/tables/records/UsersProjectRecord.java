/*
 * This file is generated by jOOQ.
*/
package com.example.jooq.generated.tables.records;


import com.example.jooq.generated.tables.UsersProject;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "users_project", schema = "public", uniqueConstraints = {
    @UniqueConstraint(columnNames = {"project_id", "user_id"})
}, indexes = {
    @Index(name = "users_project_pk", unique = true, columnList = "project_id ASC, user_id ASC")
})
public class UsersProjectRecord extends UpdatableRecordImpl<UsersProjectRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = -1778933600;

    /**
     * Setter for <code>public.users_project.project_id</code>.
     */
    public void setProjectId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.users_project.project_id</code>.
     */
    @Column(name = "project_id", nullable = false, precision = 32)
    public Integer getProjectId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.users_project.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.users_project.user_id</code>.
     */
    @Column(name = "user_id", nullable = false, precision = 32)
    public Integer getUserId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return UsersProject.USERS_PROJECT.PROJECT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return UsersProject.USERS_PROJECT.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getProjectId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getProjectId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersProjectRecord value1(Integer value) {
        setProjectId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersProjectRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersProjectRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersProjectRecord
     */
    public UsersProjectRecord() {
        super(UsersProject.USERS_PROJECT);
    }

    /**
     * Create a detached, initialised UsersProjectRecord
     */
    public UsersProjectRecord(Integer projectId, Integer userId) {
        super(UsersProject.USERS_PROJECT);

        set(0, projectId);
        set(1, userId);
    }
}
